// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service1.proto

package task3

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Mother struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Firstname            string   `protobuf:"bytes,2,opt,name=Firstname,proto3" json:"Firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,3,opt,name=Lastname,proto3" json:"Lastname,omitempty"`
	Patronymic           string   `protobuf:"bytes,4,opt,name=Patronymic,proto3" json:"Patronymic,omitempty"`
	Childs               []*Child `protobuf:"bytes,5,rep,name=Childs,proto3" json:"Childs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mother) Reset()         { *m = Mother{} }
func (m *Mother) String() string { return proto.CompactTextString(m) }
func (*Mother) ProtoMessage()    {}
func (*Mother) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{0}
}

func (m *Mother) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mother.Unmarshal(m, b)
}
func (m *Mother) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mother.Marshal(b, m, deterministic)
}
func (m *Mother) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mother.Merge(m, src)
}
func (m *Mother) XXX_Size() int {
	return xxx_messageInfo_Mother.Size(m)
}
func (m *Mother) XXX_DiscardUnknown() {
	xxx_messageInfo_Mother.DiscardUnknown(m)
}

var xxx_messageInfo_Mother proto.InternalMessageInfo

func (m *Mother) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Mother) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Mother) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Mother) GetPatronymic() string {
	if m != nil {
		return m.Patronymic
	}
	return ""
}

func (m *Mother) GetChilds() []*Child {
	if m != nil {
		return m.Childs
	}
	return nil
}

type Child struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Firstname            string   `protobuf:"bytes,2,opt,name=Firstname,proto3" json:"Firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,3,opt,name=Lastname,proto3" json:"Lastname,omitempty"`
	Patronymic           string   `protobuf:"bytes,4,opt,name=Patronymic,proto3" json:"Patronymic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Child) Reset()         { *m = Child{} }
func (m *Child) String() string { return proto.CompactTextString(m) }
func (*Child) ProtoMessage()    {}
func (*Child) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{1}
}

func (m *Child) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Child.Unmarshal(m, b)
}
func (m *Child) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Child.Marshal(b, m, deterministic)
}
func (m *Child) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Child.Merge(m, src)
}
func (m *Child) XXX_Size() int {
	return xxx_messageInfo_Child.Size(m)
}
func (m *Child) XXX_DiscardUnknown() {
	xxx_messageInfo_Child.DiscardUnknown(m)
}

var xxx_messageInfo_Child proto.InternalMessageInfo

func (m *Child) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Child) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *Child) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Child) GetPatronymic() string {
	if m != nil {
		return m.Patronymic
	}
	return ""
}

type ListMotherRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMotherRequest) Reset()         { *m = ListMotherRequest{} }
func (m *ListMotherRequest) String() string { return proto.CompactTextString(m) }
func (*ListMotherRequest) ProtoMessage()    {}
func (*ListMotherRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{2}
}

func (m *ListMotherRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMotherRequest.Unmarshal(m, b)
}
func (m *ListMotherRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMotherRequest.Marshal(b, m, deterministic)
}
func (m *ListMotherRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMotherRequest.Merge(m, src)
}
func (m *ListMotherRequest) XXX_Size() int {
	return xxx_messageInfo_ListMotherRequest.Size(m)
}
func (m *ListMotherRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMotherRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMotherRequest proto.InternalMessageInfo

type ListMotherResponse struct {
	Mothers              []*Mother `protobuf:"bytes,1,rep,name=mothers,proto3" json:"mothers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListMotherResponse) Reset()         { *m = ListMotherResponse{} }
func (m *ListMotherResponse) String() string { return proto.CompactTextString(m) }
func (*ListMotherResponse) ProtoMessage()    {}
func (*ListMotherResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{3}
}

func (m *ListMotherResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMotherResponse.Unmarshal(m, b)
}
func (m *ListMotherResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMotherResponse.Marshal(b, m, deterministic)
}
func (m *ListMotherResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMotherResponse.Merge(m, src)
}
func (m *ListMotherResponse) XXX_Size() int {
	return xxx_messageInfo_ListMotherResponse.Size(m)
}
func (m *ListMotherResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMotherResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMotherResponse proto.InternalMessageInfo

func (m *ListMotherResponse) GetMothers() []*Mother {
	if m != nil {
		return m.Mothers
	}
	return nil
}

type MotherRequest struct {
	Mother               *Mother  `protobuf:"bytes,1,opt,name=mother,proto3" json:"mother,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MotherRequest) Reset()         { *m = MotherRequest{} }
func (m *MotherRequest) String() string { return proto.CompactTextString(m) }
func (*MotherRequest) ProtoMessage()    {}
func (*MotherRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{4}
}

func (m *MotherRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MotherRequest.Unmarshal(m, b)
}
func (m *MotherRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MotherRequest.Marshal(b, m, deterministic)
}
func (m *MotherRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MotherRequest.Merge(m, src)
}
func (m *MotherRequest) XXX_Size() int {
	return xxx_messageInfo_MotherRequest.Size(m)
}
func (m *MotherRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MotherRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MotherRequest proto.InternalMessageInfo

func (m *MotherRequest) GetMother() *Mother {
	if m != nil {
		return m.Mother
	}
	return nil
}

type MotherResponse struct {
	Mother               *Mother  `protobuf:"bytes,1,opt,name=mother,proto3" json:"mother,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MotherResponse) Reset()         { *m = MotherResponse{} }
func (m *MotherResponse) String() string { return proto.CompactTextString(m) }
func (*MotherResponse) ProtoMessage()    {}
func (*MotherResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{5}
}

func (m *MotherResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MotherResponse.Unmarshal(m, b)
}
func (m *MotherResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MotherResponse.Marshal(b, m, deterministic)
}
func (m *MotherResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MotherResponse.Merge(m, src)
}
func (m *MotherResponse) XXX_Size() int {
	return xxx_messageInfo_MotherResponse.Size(m)
}
func (m *MotherResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MotherResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MotherResponse proto.InternalMessageInfo

func (m *MotherResponse) GetMother() *Mother {
	if m != nil {
		return m.Mother
	}
	return nil
}

type ListChildsResponse struct {
	Childs               []*Child `protobuf:"bytes,1,rep,name=childs,proto3" json:"childs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChildsResponse) Reset()         { *m = ListChildsResponse{} }
func (m *ListChildsResponse) String() string { return proto.CompactTextString(m) }
func (*ListChildsResponse) ProtoMessage()    {}
func (*ListChildsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{6}
}

func (m *ListChildsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChildsResponse.Unmarshal(m, b)
}
func (m *ListChildsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChildsResponse.Marshal(b, m, deterministic)
}
func (m *ListChildsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChildsResponse.Merge(m, src)
}
func (m *ListChildsResponse) XXX_Size() int {
	return xxx_messageInfo_ListChildsResponse.Size(m)
}
func (m *ListChildsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChildsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListChildsResponse proto.InternalMessageInfo

func (m *ListChildsResponse) GetChilds() []*Child {
	if m != nil {
		return m.Childs
	}
	return nil
}

type MotherAndChildRequest struct {
	Mother               *Mother  `protobuf:"bytes,1,opt,name=mother,proto3" json:"mother,omitempty"`
	Child                *Child   `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MotherAndChildRequest) Reset()         { *m = MotherAndChildRequest{} }
func (m *MotherAndChildRequest) String() string { return proto.CompactTextString(m) }
func (*MotherAndChildRequest) ProtoMessage()    {}
func (*MotherAndChildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{7}
}

func (m *MotherAndChildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MotherAndChildRequest.Unmarshal(m, b)
}
func (m *MotherAndChildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MotherAndChildRequest.Marshal(b, m, deterministic)
}
func (m *MotherAndChildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MotherAndChildRequest.Merge(m, src)
}
func (m *MotherAndChildRequest) XXX_Size() int {
	return xxx_messageInfo_MotherAndChildRequest.Size(m)
}
func (m *MotherAndChildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MotherAndChildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MotherAndChildRequest proto.InternalMessageInfo

func (m *MotherAndChildRequest) GetMother() *Mother {
	if m != nil {
		return m.Mother
	}
	return nil
}

func (m *MotherAndChildRequest) GetChild() *Child {
	if m != nil {
		return m.Child
	}
	return nil
}

type ChildResponse struct {
	Child                *Child   `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChildResponse) Reset()         { *m = ChildResponse{} }
func (m *ChildResponse) String() string { return proto.CompactTextString(m) }
func (*ChildResponse) ProtoMessage()    {}
func (*ChildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bca3141bfe225b47, []int{8}
}

func (m *ChildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChildResponse.Unmarshal(m, b)
}
func (m *ChildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChildResponse.Marshal(b, m, deterministic)
}
func (m *ChildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChildResponse.Merge(m, src)
}
func (m *ChildResponse) XXX_Size() int {
	return xxx_messageInfo_ChildResponse.Size(m)
}
func (m *ChildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChildResponse proto.InternalMessageInfo

func (m *ChildResponse) GetChild() *Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func init() {
	proto.RegisterType((*Mother)(nil), "task3.Mother")
	proto.RegisterType((*Child)(nil), "task3.Child")
	proto.RegisterType((*ListMotherRequest)(nil), "task3.ListMotherRequest")
	proto.RegisterType((*ListMotherResponse)(nil), "task3.ListMotherResponse")
	proto.RegisterType((*MotherRequest)(nil), "task3.MotherRequest")
	proto.RegisterType((*MotherResponse)(nil), "task3.MotherResponse")
	proto.RegisterType((*ListChildsResponse)(nil), "task3.ListChildsResponse")
	proto.RegisterType((*MotherAndChildRequest)(nil), "task3.MotherAndChildRequest")
	proto.RegisterType((*ChildResponse)(nil), "task3.ChildResponse")
}

func init() { proto.RegisterFile("service1.proto", fileDescriptor_bca3141bfe225b47) }

var fileDescriptor_bca3141bfe225b47 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xeb, 0xca, 0xd3, 0x40,
	0x10, 0xfd, 0xd2, 0x9a, 0x7c, 0x76, 0x7a, 0x41, 0xd7, 0x56, 0x62, 0x2c, 0x52, 0x96, 0x8a, 0xfd,
	0x95, 0x62, 0x0b, 0x0a, 0x05, 0x0b, 0x5a, 0xeb, 0x05, 0x2a, 0x48, 0xc0, 0x07, 0x48, 0x9b, 0xb5,
	0x0d, 0x36, 0x97, 0x66, 0xb7, 0x42, 0xdf, 0xc4, 0xc7, 0xf0, 0x11, 0xc5, 0x9d, 0x6d, 0xda, 0xa4,
	0x17, 0x94, 0xc0, 0xf7, 0x2f, 0x39, 0x67, 0xcf, 0xd9, 0x33, 0x33, 0xc9, 0x40, 0x83, 0xb3, 0xe4,
	0xa7, 0xbf, 0x60, 0x2f, 0xed, 0x38, 0x89, 0x44, 0x44, 0x74, 0xe1, 0xf2, 0x1f, 0x43, 0xeb, 0xe9,
	0x32, 0x8a, 0x96, 0x6b, 0xd6, 0x97, 0xe0, 0x7c, 0xfb, 0xbd, 0xcf, 0x82, 0x58, 0xec, 0xf0, 0x0c,
	0xfd, 0xa5, 0x81, 0xf1, 0x25, 0x12, 0x2b, 0x96, 0x90, 0x06, 0x94, 0x7c, 0xcf, 0xd4, 0x3a, 0x5a,
	0xaf, 0xec, 0x94, 0x7c, 0x8f, 0xb4, 0xa1, 0xf2, 0xc1, 0x4f, 0xb8, 0x08, 0xdd, 0x80, 0x99, 0xa5,
	0x8e, 0xd6, 0xab, 0x38, 0x07, 0x80, 0x58, 0x70, 0x7f, 0xe6, 0x2a, 0xb2, 0x2c, 0xc9, 0xf4, 0x9d,
	0x3c, 0x03, 0xf8, 0xea, 0x8a, 0x24, 0x0a, 0x77, 0x81, 0xbf, 0x30, 0xef, 0x49, 0xf6, 0x08, 0x21,
	0x5d, 0x30, 0x26, 0x2b, 0x7f, 0xed, 0x71, 0x53, 0xef, 0x94, 0x7b, 0xd5, 0x41, 0xcd, 0x96, 0x49,
	0x6d, 0x09, 0x3a, 0x8a, 0xa3, 0x1b, 0xd0, 0xe5, 0xd3, 0xdd, 0x05, 0xa3, 0x8f, 0xe0, 0xe1, 0xcc,
	0xe7, 0x02, 0x1b, 0xe2, 0xb0, 0xcd, 0x96, 0x71, 0x41, 0xdf, 0x00, 0x39, 0x06, 0x79, 0x1c, 0x85,
	0x9c, 0x91, 0x17, 0x70, 0x1b, 0x48, 0x84, 0x9b, 0x9a, 0x2c, 0xa2, 0xae, 0x8a, 0x50, 0xe7, 0xf6,
	0x2c, 0x7d, 0x05, 0xf5, 0x8c, 0x1f, 0x79, 0x0e, 0x06, 0x72, 0xb2, 0xa4, 0x13, 0xa1, 0x22, 0xe9,
	0x6b, 0x68, 0xe4, 0xae, 0xfc, 0x47, 0xe1, 0x08, 0xf3, 0x62, 0x17, 0x53, 0x71, 0x17, 0x8c, 0x05,
	0xf6, 0x5c, 0x3b, 0xd7, 0x73, 0xe4, 0xe8, 0x1c, 0x5a, 0xe8, 0xf6, 0x36, 0xf4, 0x90, 0xf9, 0xaf,
	0xd0, 0x84, 0x82, 0x2e, 0x9d, 0xe4, 0x58, 0xf2, 0x97, 0x20, 0x45, 0x87, 0x50, 0x57, 0xd6, 0x2a,
	0x5a, 0x2a, 0xd2, 0x2e, 0x8a, 0x06, 0xbf, 0x75, 0xb8, 0xfd, 0xac, 0x3e, 0xd4, 0x09, 0xc0, 0x61,
	0x20, 0xc4, 0x54, 0xc7, 0x4f, 0x06, 0x67, 0x3d, 0x39, 0xc3, 0xe0, 0x95, 0xf4, 0x86, 0x8c, 0xa0,
	0xf2, 0x91, 0xed, 0x3d, 0x9a, 0xd9, 0x6a, 0x94, 0xbe, 0x95, 0x43, 0x53, 0xed, 0x14, 0x1e, 0xa4,
	0x5a, 0x8e, 0x7d, 0xbe, 0x60, 0x71, 0x1c, 0x21, 0x3b, 0x10, 0x7a, 0x43, 0x3e, 0x49, 0x1b, 0x09,
	0xbf, 0xdb, 0xa9, 0x24, 0xed, 0x8c, 0x4d, 0x6e, 0x0a, 0x56, 0x33, 0xd3, 0x9a, 0x83, 0xd3, 0x18,
	0x6a, 0x93, 0x84, 0xb9, 0x82, 0x5d, 0xad, 0xe7, 0xb1, 0x8d, 0x9b, 0xc0, 0xde, 0x6f, 0x02, 0x7b,
	0xfa, 0x77, 0x13, 0xc8, 0x82, 0xaa, 0xa8, 0xc7, 0x1f, 0xee, 0x7a, 0x88, 0xcb, 0x36, 0x63, 0xa8,
	0x7d, 0x8b, 0xbd, 0x42, 0x31, 0x50, 0x5f, 0x38, 0xc6, 0x7b, 0xb6, 0x66, 0x45, 0x62, 0xa0, 0xbe,
	0x50, 0x8c, 0xb9, 0x21, 0x91, 0xe1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0xcc, 0x31, 0xef,
	0x97, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IMotherClient is the client API for IMother service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IMotherClient interface {
	ListMother(ctx context.Context, in *ListMotherRequest, opts ...grpc.CallOption) (*ListMotherResponse, error)
	GetMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*MotherResponse, error)
	GetMothersChilds(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*ListChildsResponse, error)
	GetChildByMother(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*ChildResponse, error)
	CreateMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type iMotherClient struct {
	cc *grpc.ClientConn
}

func NewIMotherClient(cc *grpc.ClientConn) IMotherClient {
	return &iMotherClient{cc}
}

func (c *iMotherClient) ListMother(ctx context.Context, in *ListMotherRequest, opts ...grpc.CallOption) (*ListMotherResponse, error) {
	out := new(ListMotherResponse)
	err := c.cc.Invoke(ctx, "/task3.IMother/ListMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) GetMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*MotherResponse, error) {
	out := new(MotherResponse)
	err := c.cc.Invoke(ctx, "/task3.IMother/GetMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) GetMothersChilds(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*ListChildsResponse, error) {
	out := new(ListChildsResponse)
	err := c.cc.Invoke(ctx, "/task3.IMother/GetMothersChilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) GetChildByMother(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*ChildResponse, error) {
	out := new(ChildResponse)
	err := c.cc.Invoke(ctx, "/task3.IMother/GetChildByMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) CreateMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/CreateMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) CreateChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/CreateChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) UpdateMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/UpdateMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) UpdateChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/UpdateChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) DeleteMother(ctx context.Context, in *MotherRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/DeleteMother", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMotherClient) DeleteChild(ctx context.Context, in *MotherAndChildRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/task3.IMother/DeleteChild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IMotherServer is the server API for IMother service.
type IMotherServer interface {
	ListMother(context.Context, *ListMotherRequest) (*ListMotherResponse, error)
	GetMother(context.Context, *MotherRequest) (*MotherResponse, error)
	GetMothersChilds(context.Context, *MotherRequest) (*ListChildsResponse, error)
	GetChildByMother(context.Context, *MotherAndChildRequest) (*ChildResponse, error)
	CreateMother(context.Context, *MotherRequest) (*empty.Empty, error)
	CreateChild(context.Context, *MotherAndChildRequest) (*empty.Empty, error)
	UpdateMother(context.Context, *MotherRequest) (*empty.Empty, error)
	UpdateChild(context.Context, *MotherAndChildRequest) (*empty.Empty, error)
	DeleteMother(context.Context, *MotherRequest) (*empty.Empty, error)
	DeleteChild(context.Context, *MotherAndChildRequest) (*empty.Empty, error)
}

// UnimplementedIMotherServer can be embedded to have forward compatible implementations.
type UnimplementedIMotherServer struct {
}

func (*UnimplementedIMotherServer) ListMother(ctx context.Context, req *ListMotherRequest) (*ListMotherResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMother not implemented")
}
func (*UnimplementedIMotherServer) GetMother(ctx context.Context, req *MotherRequest) (*MotherResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMother not implemented")
}
func (*UnimplementedIMotherServer) GetMothersChilds(ctx context.Context, req *MotherRequest) (*ListChildsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMothersChilds not implemented")
}
func (*UnimplementedIMotherServer) GetChildByMother(ctx context.Context, req *MotherAndChildRequest) (*ChildResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChildByMother not implemented")
}
func (*UnimplementedIMotherServer) CreateMother(ctx context.Context, req *MotherRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMother not implemented")
}
func (*UnimplementedIMotherServer) CreateChild(ctx context.Context, req *MotherAndChildRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChild not implemented")
}
func (*UnimplementedIMotherServer) UpdateMother(ctx context.Context, req *MotherRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMother not implemented")
}
func (*UnimplementedIMotherServer) UpdateChild(ctx context.Context, req *MotherAndChildRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChild not implemented")
}
func (*UnimplementedIMotherServer) DeleteMother(ctx context.Context, req *MotherRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMother not implemented")
}
func (*UnimplementedIMotherServer) DeleteChild(ctx context.Context, req *MotherAndChildRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChild not implemented")
}

func RegisterIMotherServer(s *grpc.Server, srv IMotherServer) {
	s.RegisterService(&_IMother_serviceDesc, srv)
}

func _IMother_ListMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).ListMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/ListMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).ListMother(ctx, req.(*ListMotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_GetMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).GetMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/GetMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).GetMother(ctx, req.(*MotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_GetMothersChilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).GetMothersChilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/GetMothersChilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).GetMothersChilds(ctx, req.(*MotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_GetChildByMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherAndChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).GetChildByMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/GetChildByMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).GetChildByMother(ctx, req.(*MotherAndChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_CreateMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).CreateMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/CreateMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).CreateMother(ctx, req.(*MotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_CreateChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherAndChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).CreateChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/CreateChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).CreateChild(ctx, req.(*MotherAndChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_UpdateMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).UpdateMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/UpdateMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).UpdateMother(ctx, req.(*MotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_UpdateChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherAndChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).UpdateChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/UpdateChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).UpdateChild(ctx, req.(*MotherAndChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_DeleteMother_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).DeleteMother(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/DeleteMother",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).DeleteMother(ctx, req.(*MotherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMother_DeleteChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotherAndChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMotherServer).DeleteChild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task3.IMother/DeleteChild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMotherServer).DeleteChild(ctx, req.(*MotherAndChildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IMother_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task3.IMother",
	HandlerType: (*IMotherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMother",
			Handler:    _IMother_ListMother_Handler,
		},
		{
			MethodName: "GetMother",
			Handler:    _IMother_GetMother_Handler,
		},
		{
			MethodName: "GetMothersChilds",
			Handler:    _IMother_GetMothersChilds_Handler,
		},
		{
			MethodName: "GetChildByMother",
			Handler:    _IMother_GetChildByMother_Handler,
		},
		{
			MethodName: "CreateMother",
			Handler:    _IMother_CreateMother_Handler,
		},
		{
			MethodName: "CreateChild",
			Handler:    _IMother_CreateChild_Handler,
		},
		{
			MethodName: "UpdateMother",
			Handler:    _IMother_UpdateMother_Handler,
		},
		{
			MethodName: "UpdateChild",
			Handler:    _IMother_UpdateChild_Handler,
		},
		{
			MethodName: "DeleteMother",
			Handler:    _IMother_DeleteMother_Handler,
		},
		{
			MethodName: "DeleteChild",
			Handler:    _IMother_DeleteChild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service1.proto",
}
